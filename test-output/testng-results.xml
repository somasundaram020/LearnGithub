<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-07-19T16:04:32Z" name="Suite" finished-at="2020-07-19T16:05:34Z" duration-ms="61958">
    <groups>
    </groups>
    <test started-at="2020-07-19T16:04:32Z" name="Java interview testcase" finished-at="2020-07-19T16:04:48Z" duration-ms="15805">
      <class name="Learn.Framework.Articlepage">
        <test-method is-config="true" signature="initialize()[pri:0, instance:Learn.Framework.Articlepage@24f360b2]" started-at="2020-07-19T16:04:32Z" name="initialize" finished-at="2020-07-19T16:04:40Z" duration-ms="8359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="article()[pri:0, instance:Learn.Framework.Articlepage@24f360b2]" started-at="2020-07-19T16:04:41Z" name="article" finished-at="2020-07-19T16:04:48Z" duration-ms="7250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- article -->
        <test-method is-config="true" signature="close()[pri:0, instance:Learn.Framework.Articlepage@24f360b2]" started-at="2020-07-19T16:04:48Z" name="close" finished-at="2020-07-19T16:04:48Z" duration-ms="150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- Learn.Framework.Articlepage -->
    </test> <!-- Java interview testcase -->
    <test started-at="2020-07-19T16:04:49Z" name="Registration testcase" finished-at="2020-07-19T16:05:09Z" duration-ms="20464">
      <class name="Learn.Framework.Aboutpage">
        <test-method is-config="true" signature="initialize()[pri:0, instance:Learn.Framework.Aboutpage@a50b09c]" started-at="2020-07-19T16:04:49Z" name="initialize" finished-at="2020-07-19T16:04:55Z" duration-ms="6184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="Signup()[pri:0, instance:Learn.Framework.Aboutpage@a50b09c]" started-at="2020-07-19T16:04:55Z" name="Signup" finished-at="2020-07-19T16:05:09Z" duration-ms="14190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Signup -->
        <test-method is-config="true" signature="close()[pri:0, instance:Learn.Framework.Aboutpage@a50b09c]" started-at="2020-07-19T16:05:09Z" name="close" finished-at="2020-07-19T16:05:09Z" duration-ms="87" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- Learn.Framework.Aboutpage -->
    </test> <!-- Registration testcase -->
    <test started-at="2020-07-19T16:05:09Z" name="Login testcase" finished-at="2020-07-19T16:05:24Z" duration-ms="14985">
      <class name="Learn.Framework.Homepage">
        <test-method is-config="true" signature="initialize()[pri:0, instance:Learn.Framework.Homepage@18cc679e]" started-at="2020-07-19T16:05:09Z" name="initialize" finished-at="2020-07-19T16:05:15Z" duration-ms="6187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="login(java.lang.String, java.lang.String)[pri:0, instance:Learn.Framework.Homepage@18cc679e]" started-at="2020-07-19T16:05:15Z" name="login" data-provider="getData" finished-at="2020-07-19T16:05:24Z" duration-ms="8670" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[somasundaram20gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rahulshettycademy020]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="close()[pri:0, instance:Learn.Framework.Homepage@18cc679e]" started-at="2020-07-19T16:05:24Z" name="close" finished-at="2020-07-19T16:05:24Z" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- Learn.Framework.Homepage -->
    </test> <!-- Login testcase -->
    <test started-at="2020-07-19T16:05:24Z" name="Featured course" finished-at="2020-07-19T16:05:34Z" duration-ms="9853">
      <class name="Learn.Framework.FeaturedCourse">
        <test-method is-config="true" signature="initialize()[pri:0, instance:Learn.Framework.FeaturedCourse@560cbf1a]" started-at="2020-07-19T16:05:24Z" name="initialize" finished-at="2020-07-19T16:05:33Z" duration-ms="9135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="validateSectionName()[pri:0, instance:Learn.Framework.FeaturedCourse@560cbf1a]" started-at="2020-07-19T16:05:33Z" name="validateSectionName" finished-at="2020-07-19T16:05:33Z" duration-ms="86" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Featured Course] but found [Featured Courses]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Featured Course] but found [Featured Courses]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at Learn.Framework.FeaturedCourse.validateSectionName(FeaturedCourse.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSectionName -->
        <test-method is-config="true" signature="close()[pri:0, instance:Learn.Framework.FeaturedCourse@560cbf1a]" started-at="2020-07-19T16:05:34Z" name="close" finished-at="2020-07-19T16:05:34Z" duration-ms="84" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- Learn.Framework.FeaturedCourse -->
    </test> <!-- Featured course -->
  </suite> <!-- Suite -->
</testng-results>
